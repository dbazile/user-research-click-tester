/* =========================================================================
   Container
   ========================================================================= */

.root {
  position: relative;
  display: flex;
  flex-direction: row;
  height: 100vh;
  align-items: center;
  transition: ease .1s;
  transition-property: background-color color;
  overflow: hidden;
  margin: 0;
}

.clicked + :not(.clicked) {
  box-shadow: inset 0 10px rgba(0,0,0, .07);
}

/* =========================================================================
   Click State
   ========================================================================= */

.clicked {
  background-color: hsl(120, 60%, 60%);
  color: white;
}

.abused {
  background-color: hsl(350, 50%, 50%);
}

/* Click State: Sidebar Stuff
   ========================================================================= */

.clicked .sidebar {
  opacity: .25;
}

.clicked .name {
  color: inherit;
}

/* Click State: Messages
   ========================================================================= */

.message {
  position: absolute;
  top: -200px;
  margin: auto;
  opacity: 0;
  transition: all cubic-bezier(0.57, 1.3, 1, 1) .3s;
}

.clickedMessage {
  composes: message;
  top: -50%;
  left: 65%;
  right: 15%;
}

.clicked .clickedMessage {
  top: 50%;
  opacity: 1;
  transform: translateY(-50%);
}

.thumbsUp {
  width: 100%;
  fill: hsla(120, 100%, 90%, .75);
  transition: transform ease-out 5s;
}

.abused .thumbsUp {
  fill: hsla(350, 75%, 75%, .5);
  transform: translateY(-100%) scale(2.0);
}

.abuseMessage {
  composes: message;
  left: 50%;
  right: 50px;
  padding: 50px;
  background-color: rgba(64,0,0, .7);
  border-radius: 10px;
  box-shadow: 0 0 0 20px rgba(255,255,255, .5);
  font-size: 4em;
  font-weight: bold;
  text-align: center;
}

.abused .abuseMessage {
  top: 50%;
  opacity: 1;
  transform: translateY(-50%);
}

/* =========================================================================
   Columns
   ========================================================================= */

.column {
  flex: 1;
  margin: 50px;
}

/* Columns: Viewport
   ========================================================================= */

.viewport {
  composes: column;
  text-align: center;
}

.viewport canvas {
  /*
    (1) HACK -- In an act of desperation, I put this in to solve a specific
                problem with proper scaling of images inside of flexbox
                containers.  Since a flex container doesn't get a height, you
                can't bind the max height to 100%.  I've pinned this to the
                viewport since that's what's being targeting anyway.
  */
  max-width: 40vw;   /* 1 */
  max-height: 70vh;  /* 1 */
  background-color: white;
  border-radius: 5px;
  box-shadow:
    0 0 0  1px rgba(0,0,0,.2),
    0 2px 0 1px rgba(0,0,0,.05),
    0 0 0 20px rgba(0,0,0,.1);
}

/* Columns: Information
   ========================================================================= */

.sidebar {
  composes: column;
}
