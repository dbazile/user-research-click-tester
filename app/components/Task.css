/* =========================================================================
   Container
   ========================================================================= */

.root {
  display: flex;
  flex-direction: row;
  height: 100vh;
  align-items: center;
  transition: ease .1s;
  transition-property: background-color color;
}

/* Container: Click State
   ========================================================================= */

.clicked {
  background-color: hsl(120, 60%, 60%);
  color: white;
}

.clicked + .clicked {
  box-shadow: inset 0 1px rgba(0,0,0, .06);
}

.clicked .name {
  color: inherit;
}

/* =========================================================================
   Columns
   ========================================================================= */

.column {
  flex: 1;
  margin: 1.5em;
}

/* Columns: Viewport
   ========================================================================= */

.viewport {
  composes: column;
  text-align: center;
}

.viewport canvas {
  /*
    (1) HACK -- In an act of desperation, I put this in to solve a specific
                problem with proper scaling of images inside of flexbox
                containers.  Since a flex container doesn't get a height, you
                can't bind the max height to 100%.  I've pinned this to the
                viewport since that's what's being targeting anyway.
  */
  max-width: 40vw;   /* 1 */
  max-height: 70vh;  /* 1 */
  background-color: white;
  border-radius: 5px;
  box-shadow:
    0 0 0  1px rgba(0,0,0,.2),
    0 2px 0 1px rgba(0,0,0,.05),
    0 0 0 20px rgba(0,0,0,.1);
}

/* Columns: Information
   ========================================================================= */

.sidebar {
  composes: column;
}
